server:
  port: 8080
  servlet:
    context-path:
      /backservices
  # Оптимизация для production
  tomcat:
    threads:
      max: 200
      min-spare: 10
    accept-count: 100
    max-connections: 8192

spring:
  application:
    name: back-services-kotlin

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    # Connection pool оптимизация для HikariCP
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false  # Отключаем в production для производительности
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        # Batch processing для оптимизации
        jdbc:
          batch_size: 20
          fetch_size: 50
        order_inserts: true
        order_updates: true
        # Second-level cache
        cache:
          use_second_level_cache: false
          use_query_cache: false
        # Статистика (отключаем в production)
        generate_statistics: false

  jackson:
    property-naming-strategy: SNAKE_CASE
    serialization:
      write-dates-as-timestamps: false
    default-property-inclusion: non_null

  # Кэширование
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=10m

logging:
  level:
    org.hibernate.SQL: WARN  # Меняем на WARN для production
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.springframework.web: DEBUG
    suai.vladislav.backserviceskotlin: INFO

springdoc:
  api-docs:
    path: /api-docs
